class Item:
    def __init__(self, name, origin, base_price):
        self.name = name
        self.origin = origin
        self.base_price = base_price

    def __repr__(self):
        return f"{self.name} ({self.origin}): {self.base_price} золота"


def apply_modifier(price, modifier):
    return price * (1 + modifier / 100)


class PriceModifier:
    def __init__(self):
        self.city_modifiers = {
            "Столица": {
                "tools_list": 7,
                "horse_list": 15,
                "food_list": 15,
                "pay_list": 0,
                "weapon_list": 0,
                "books_list": 0,
                "construction_list": 30,
                "clothes_list": 15
            },
            "Гномий город": {
                "tools_list": -20,
                "horse_list": 0,
                "food_list": 100,
                "pay_list": 0,
                "weapon_list": 0,
                "books_list": 20,
                "construction_list": 0,
                "clothes_list": 20
            },
            "Провинциальный город": {
                "tools_list": 0,
                "horse_list": 0,
                "food_list": 0,
                "pay_list": 0,
                "weapon_list": 0,
                "books_list": 0,
                "construction_list": 0,
                "clothes_list": 0
            },
        }

        self.continent_modifiers = {
            "Фловэнд": {
                "Общий": 10,
                "Реиграс": 100,
                "Ворланд": 120,
                "Темные острова": 60,
                "Ламар": 60,
                "Фловэнд": -100
            },
            "Реиграс": {},  # Нет модификаторов
            "Ворланд": {
                "Общий": -10,
                "Реиграс": 80,
                "Ворланд": -80,
                "Фловэнд": 150,
                "Ламар": 60,
                "Темные острова": 50
            },
            "Темные острова": {
                "Общий": 100,
                "Реиграс": 300,
                "Фловэнд": 200,
                "Ворланд": 200,
                "Темные острова": -20
            },
            "Ламар": {  # Все категории + 50%, кроме еды
                "Общий": 50,
                "Реиграс": 50,
                "Фловэнд": 50,
                "Ворланд": 50,
                "Темные острова": 50,
                "food_list": 100,
            },
        }

        self.event_modifiers = {
            "Спокойно": 0,
            "Война": 30,
            "Эпидемия": 50,
            "Стихийное бедствие": 50
        }

    def calculate_price(self, item, item_type, city_type, continent, event):
        # Проверяем базовую цену
        price = item.base_price

        # 1. Применяем модификатор континента
        origin_modifier = self.continent_modifiers.get(continent, {}).get(item.origin, 0)
        price = apply_modifier(price, origin_modifier)

        # 2. Применяем модификаторы города
        city_modifier = self.city_modifiers.get(city_type, {}).get(item_type, 0)
        price = apply_modifier(price, city_modifier)

        # 3. Применяем модификатор события
        event_modifier = self.event_modifiers.get(event, 0)
        price = apply_modifier(price, event_modifier)

        return round(price, 2)


def categorize_item(item, categories):
    for category, items in categories.items():
        if item in items:
            return category
    return None


# Списки предметов
tools_list = [
        Item('Хомут', 'Общий', 2),
        Item('Подкова', 'Общий', 0.4),
        Item('Инструмент каменщика', 'Общий', 0.15),
        Item('Лопата', 'Общий', 0.24),
        Item('Топор хозяйственный', 'Общий', 0.4),
        Item('Тиски', 'Общий', 4.56),
        Item('Большой набор кузнеца', 'Общий', 32),
        Item('Малый набор кузнеца', 'Общий', 13.16),
        Item('Наковальня', 'Общий', 6.25),
        Item('Кузнечные мехи', 'Общий', 9.37),
        Item('Молот', 'Общий', 0.6),
        Item('Долото', 'Общий', 0.2),
        Item('Набор инструментов оружейного мастера', 'Общий', 83)
]

horse_list = [
        Item('Боевой конь', 'Общий', 200),
        Item('Дестрие', 'Общий', 800),
        Item('Ездовой конь', 'Общий', 50),
        Item('Упряжная лошадь', 'Общий', 20)
]

food_list = [
        Item('Вино Телмисское высокого качества', 'Реиграс', 0.2),
        Item('Вино Деванское высокого качества', 'Реиграс', 0.3),
        Item('Вино Фловэндское высокого качества', 'Фловэнд', 0.5),
        Item('Вино Арканарское сливовое высокого качества', 'Ворланд', 0.5),
        Item('Вино дешевое универсальное', 'Общий', 0.07),
        Item('Вино дорогое универсальное', 'Общий', 0.3),
        Item('Эль подвида "моча обыкновенная"', 'Реиграс', 0.01),
        Item('Эль средний', 'Реиграс', 0.02),
        Item('Эль хороший', 'Реиграс', 0.03),
        Item('Эль первоклассный', 'Реиграс', 0.04),
        Item('Сухофрукты (яблоки,груши,чернослив,изюм,хурма)', 'Реиграс', 0.3),
        Item('Сухофрукты (манго,ананасы,апельсины,бананы,лимоны)', 'Фловэнд', 2),
        Item('Сухофрукты (личи, дуриан, драконов фрукт, айва, слива', 'Ворланд', 1.5),
        Item('Сухофрукты (кокос, банан, маракуя', 'Темные острова', 2.5),
        Item('Рис', 'Ворланд', 0.64),
        Item('Миндаль', 'Ворланд', 0.84),
        Item('Лесные орехи', 'Реиграс', 0.4),
        Item('Специи (корица,перец,мускат,гвоздика и т.д.)', 'Ворланд', 6),
        Item('Шафран', 'Ворланд', 23),
        Item('Корова', 'Общий', 9.4),
        Item('Вол', 'Общий', 13.1),
        Item('Овца', 'Общий', 1.4),
        Item('Кастрированный баран', 'Общий', 0.8),
        Item('Свинья', 'Общий', 2),
        Item('Цыплёнок', 'Общий', 0.04),
        Item('Две дюжины яиц', 'Общий', 0.08),
        Item('Гусь', 'Общий', 0.4),
        Item('Сыр', 'Общий', 0.09),
        Item('Сельдь солёная', 'Реиграс', 0.05),
        Item('Угорь солёный', 'Общий', 0.48),
        Item('Хлеб', 'Общий', 0.05),
        Item('Мясо (дичь)', 'Общий', 0.6),
        Item('Молоко', 'Общий', 0.04),
        Item('Овощи (морковь,репа,свёкла,лук,капуста,чеснок)', 'Общий', 0.12),
        Item('Овощи (Фасоль,горох,нут,кукуруза,картофель)', 'Общий', 0.15),
        Item('Фрукты (яблоки,груши,чернослив,фрукты,хурма)', 'Реиграс', 0.12),
        Item('Фрукты (манго,ананасы,апельсины,бананы,лимоны)', 'Фловэнд', 3.5),
        Item('Фрукты (личи, дуриан, драконов фрукт, айва, слива', 'Ворланд', 2.5),
        Item('Фрукты (кокос, банан, маракуя)', 'Темные острова', 4),
        Item('Творог', 'Общий', 0.4),
        Item('Сахар', 'Фловэнд', 4.5),
        Item('Мёд', 'Общий', 0.4),
        Item('Овёс', 'Общий', 0.33)
]

pay_list = [
        Item('Маг высокого уровня умений (заклинания 3+ круга)', 'Реиграс', 8),
        Item('Баннерет/маг начального уровня', 'Реиграс', 4),
        Item('Рядовой рыцарь', 'Реиграс', 2),
        Item('Сквайр/тяжёлый конный латник', 'Реиграс', 1),
        Item('Сквайр/констебль/латник ', 'Реиграс', 1),
        Item('Полностью снаряженный лучник, пехотинец в доспехе, арбалетчик', 'Реиграс', 0.48),
        Item('Лучник', 'Реиграс', 0.18)
]

weapon_list = [
        Item('Кольчуга минимальная (короткорукавная рубаха)', 'Общий', 16),
        Item('Кольчуга средняя (с длинным рукавом, но не до колен)', 'Общий', 26),
        Item('Кольчуга длинная', 'Общий', 80),
        Item('Шлем обычный без забрала (куполобразные с наносниками или без них)', 'Общий', 10),
        Item('Шлем средний без забрала или с полумаской (Шапели, Гьермунды и т.д)', 'Общий', 20),
        Item('Шлем тяжелый или богатый (латные, с забралами и т.д)', 'Общий', 30),
        Item('Бригантина дешёвая', 'Общий', 13.5),
        Item('Бригантина средняя', 'Общий', 27),
        Item('Бригантина богатая', 'Общий', 50),
        Item('Перчатки латные', 'Общий', 4),
        Item('Латные перчатки богатые', 'Общий', 20),
        Item('Защита рук латная', 'Общий', 30),
        Item('Защита рук латная богато украшенная', 'Общий', 60),
        Item('Защита ног латная простая', 'Реиграс', 60),
        Item('Защита ног латная богатая', 'Реиграс', 160),
        Item('Защита торса латная простая', 'Реиграс', 166.64),
        Item('Полный рыцарский доспех ', 'Реиграс', 326.64),
        Item('Очистка кирасы от ржавчины', 'Общий', 0.13),
        Item('Чистка кольчуги', 'Общий', 0.24),
        Item('Кастет', 'Общий', 0.1),
        Item('Мечелом', 'Общий', 5),
        Item('Плохая рапира', 'Общий', 0.4),
        Item('Рапира', 'Общий', 5),
        Item('Палаш', 'Общий', 0.6),
        Item('Прямой меч', 'Общий', 4.5),
        Item('Фальшион', 'Общий', 0.6),
        Item('Сабля', 'Общий', 4),
        Item('Хопеш', 'Общий', 3),
        Item('Цвайхандер', 'Общий', 40),
        Item('Клеймор', 'Общий', 45),
        Item('Фламберг', 'Общий', 60),
        Item('Бастард', 'Общий', 50),
        Item('Меч палача', 'Общий', 50),
        Item('Эспадон', 'Общий', 60),
        Item('Гросмейсер', 'Общий', 60),
        Item('Стилет', 'Общий', 0.2),
        Item('Мизерикордия', 'Общий', 0.3),
        Item('Дага', 'Общий', 0.4),
        Item('Кинжал', 'Общий', 0.1),
        Item('Боевой топор', 'Общий', 0.6),
        Item('Секира', 'Общий', 1.15),
        Item('Бродэкс', 'Общий', 2),
        Item('Топор лесоруба', 'Общий', 0.5),
        Item('Колун', 'Общий', 0.8),
        Item('Боевой молот', 'Общий', 6),
        Item('Клевец', 'Общий', 20),
        Item('Кувалда', 'Общий', 5),
        Item('Моргенштерн', 'Общий', 2.5),
        Item('Боевой цеп', 'Общий', 2),
        Item('Кистень', 'Общий', 2),
        Item('Двуручный молот', 'Общий', 12),
        Item('Кирка', 'Общий', 0.8),
        Item('Копьё', 'Общий', 0.3),
        Item('Пика', 'Общий', 2),
        Item('Полэкс', 'Общий', 30),
        Item('Алебарда', 'Общий', 40),
        Item('Рогатина', 'Общий', 1),
        Item('Пика кавалерийская', 'Общий', 20),
        Item('Баклер', 'Общий', 3),
        Item('Средний щит', 'Общий', 6),
        Item('Башенный щит', 'Общий', 12),
        Item('Цуруги', 'Ворланд', 4.5),
        Item('Дао', 'Ворланд', 4.5),
        Item('Нагамаки', 'Ворланд', 5),
        Item('Цзянь', 'Ворланд', 9),
        Item('Катана', 'Ворланд', 20),
        Item('Нодати', 'Ворланд', 80),
        Item('Тати', 'Ворланд', 12),
        Item('Дадао', 'Ворланд', 60),
        Item('Вакидзаси', 'Ворланд', 10),
        Item('Тонфы', 'Ворланд', 0.4),
        Item('Дзютте', 'Ворланд', 30),
        Item('Эку', 'Ворланд', 40),
        Item('Канабо', 'Ворланд', 120),
        Item('Нагината', 'Ворланд', 70),
        Item('Бисенто', 'Ворланд', 80),
        Item('Яри', 'Ворланд', 4),
        Item('Цян', 'Ворланд', 0.6),
        Item('Гуаньдао', 'Ворланд', 80),
        Item('Кусаригама', 'Ворланд', 80),
        Item('Кама', 'Ворланд', 30),
        Item('Тэссен', 'Ворланд', 20),
        Item('Шуангоу', 'Ворланд', 20),
        Item('Лунные клинки', 'Ворланд', 30),
        Item('Саи', 'Ворланд', 0.8),
        Item('Танто', 'Ворланд', 0.6),
        Item('Кунай', 'Ворланд', 0.2),
        Item('Арбалет', 'Общий', 20),
        Item('Тяжёлый арбалет', 'Общий', 60),
        Item('Обноручный арбалет', 'Общий', 20),
        Item('Скорострельный арбалет', 'Темные острова', 40),
        Item('Лук', 'Общий', 0.8),
        Item('Короткий лук', 'Общий', 0.6),
        Item('Длинный лук', 'Общий', 7),
        Item('Композитный лук', 'Общий', 10),
        Item('Юми', 'Ворланд', 16),
        Item('Праща', 'Общий', 0.06),
]

books_list = [
        Item('Книга первого круга магии', 'Общий', 80),
        Item('Книга второго круга магии', 'Общий', 120),
        Item('Книга третьего круга магии', 'Общий', 160),
        Item('Книга четвёртого круга магии', 'Общий', 260),
        Item('Книга пятого круга магии', 'Общий', 520)
]

construction_list = [
        Item('Годовая аренда лавки', 'Общий', 16.1),
        Item('Аренда таверны с эксклюзивным правом торговли вином', 'Общий', 938),
        Item('Аренда сельского дома', 'Общий', 5),
        Item('Аренда дома городского ремесленника', 'Общий', 20),
        Item('Аренда купеческого дома', 'Общий', 60),
        Item('Аренда дома 1 вход, 2 этажа', 'Общий', 40),
        Item('Аренда Замок и колледж', 'Общий', 9000),
        Item('Постройка дома в провинциальной столице', 'Общий', 100),
        Item('Постройка дома ремесленника (мастера) с лавкой, рабочей залой, комнатами для работников, '
             'и черепичной крышей', 'Общий', 300),
        Item('Постройка купеческого особняка', 'Общий', 1320),
        Item('Постройка дома с задним двором (цена минимальная)', 'Общий', 1800),
        Item('Постройка дома мастера-ювелира с большой залой, кухней, столовой, двумя спальнями', 'Общий', 2120),
        Item('Постройка большого склада для хранения товара с черепичной крышей', 'Общий', 1660),
        Item('Постройка деревянного здания (30 футов/9,14 метров длина), и разводного моста', 'Общий', 320),
        Item('Постройка большого каменного здания (40х18 футов; 12,19х5,49м) включая стоимость камня для стен', 'Общий',
             600),
        Item('Строительство оборонительной башни замка (не донжон)', 'Общий', 7900),
        Item('Постройка трансепта (поперечного нефа) в Глорчестерском аббатстве', 'Общий', 15620),
        Item('Возведение каменной «коробки» деревенского храма (длина 125 футов/ 38,1м)', 'Общий', 600)
]

clothes_list = [
        Item('Модное платье (средняя цена)', 'Общий', 500),
        Item('Дворянские туфли', 'Общий', 0.24),
        Item('Дворянские ботинки', 'Общий', 0.48),
        Item('Дворянский кошель', 'Общий', 0.12),
        Item('Двроянская шляпа', 'Общий', 1.1),
        Item('Камзол ремесленника и парадная рубашка', 'Общий', 3),
        Item('Облачение священника', 'Общий', 3),
        Item('Льняная рубаха', 'Общий', 0.64),
        Item('Туфли', 'Общий', 0.48),
        Item('Шерстяная туника', 'Общий', 0.48),
        Item('Туника с оторочкой мехом', 'Общий', 6.64),
        Item('Туника', 'Общий', 3),
        Item('Одежда безземельного крестьянина', 'Общий', 0.2),
        Item('Ткань для изготовления одежды простолюдинов (ярд)', 'Общий', 1),
        Item('Хорошая шерстяная ткань (ярд)', 'Общий', 5),
        Item('Крашеная в коричневый цвет ткань', 'Общий', 6),
        Item('Шёлк', 'Ворланд', 12),
        Item('Верхняя одежда с хорошим мехом', 'Общий', 60)
]

# Категории
categories = {
    "tools_list": tools_list,
    "horse_list": horse_list,
    "food_list": food_list,
    "pay_list": pay_list,
    "weapon_list": weapon_list,
    "books_list": books_list,
    "construction_list": construction_list,
    "clothes_list": clothes_list
}

# Пример использования
price_modifier = PriceModifier()

# Заданные данные
city_type = input('Введите тип города (Типы городов: Столица/Гномий город/Провинциальный город):')
continent = input('Введите континент (Континенты: Фловэнд/Реиграс/Ворланд/Ламар/Темные острова:')
event = input('Введите событие (Типы событий: Спокойно/Война/Эпидемия/Стихийное бедствие:')

# Вывод всех цен
for category_name, category_items in categories.items():
    print(f"\nКатегория: {category_name}")
    for item in category_items:
        price = price_modifier.calculate_price(
            item, category_name, city_type, continent, event
        )
        print(f"{item.name} (базовая цена: {item.base_price}) Происхождение : {item.origin} ->  {price} серебряных")